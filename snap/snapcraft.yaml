name: erigon
title: Erigon
base: core22
adopt-info: erigon
summary: Erigon - Ethereum implementation, efficient and reliable.
license: GPL-3.0-with-GCC-exception
contact: info@dwellir.com
issues: https://github.com/dwellir-public/snap-erigon/issues
source-code: https://github.com/dwellir-public/snap-erigon
website: https://www.dwellir.com
grade: stable
confinement: strict

architectures:
  - amd64

description: |
  Erigon is an implementation of Ethereum (execution layer with embeddable consensus layer), on the efficiency
  frontier. Archive Node by default.

  Disclaimer: this software is currently a tech preview. We will do our best to keep it stable and make no breaking
  changes but we don't guarantee anything. Things can and will break.

  Important defaults: Erigon is an Archive Node by default (to remove history see: --prune flags in erigon --help). 
  We don't allow change this flag after first start.

  System Requirements
    - For an Archive node of Ethereum Mainnet we recommend >=3TB storage space: 1.8TB state (as of March 2022), 200GB temp
      files (can symlink or mount folder <datadir>/temp to another disk). Ethereum Mainnet Full node ( see --prune* flags): 400Gb (April 2022).
    - Goerli Full node (see --prune* flags): 189GB on Beta, 114GB on Alpha (April 2022).
    - Gnosis Chain Archive: 370GB (January 2023).
    - Polygon Mainnet Archive: 5TB. (April 2022). --prune.*.older 15768000: 5.1Tb (Sept 2023). Polygon Mumbai Archive: 1TB. (April 2022).
    - SSD or NVMe. Do not recommend HDD - on HDD Erigon will always stay N blocks behind chain tip, but not fall behind. Bear in mind that SSD performance deteriorates when close to capacity.
    - RAM: >= 16GB, 64-bit architecture.
    - Golang version >= 1.19; GCC 10+ or Clang; On Linux: kernel > v4

  Start the service with 'sudo snap start erigon'

  Check logs from the erigon service with 'snap logs erigon -f'

parts:
  erigon:
    plugin: go
    build-snaps: [go/latest/stable]
    source: https://github.com/ledgerwatch/erigon.git
    source-tag: v3.0.1

    override-pull: |
      craftctl default
      craftctl set version="v3.0.1-$(git rev-parse --short HEAD)"

    override-build: |
      # The Makefile contains bunch of compiler options. Don't even try reproduce it.
      go mod tidy
      make all
      make DIST=$SNAPCRAFT_PART_INSTALL install
      mkdir -p $SNAPCRAFT_PART_INSTALL/lib/

      # Rip out the libsilkworm_capi.so and ship it.
      find /root/go/pkg/mod/github.com/erigontech/ -name libsilkworm_capi.so -exec cp {} $SNAPCRAFT_PART_INSTALL/lib/ \;

    stage:
      - bin/erigon
      - lib/libsilkworm_capi.so

    organize:
      erigon: bin/erigon


  wrappers:
    plugin: dump
    source-type: local
    source: .
    stage:
      - wrappers/


  utils:
    plugin: dump
    source: .
    stage:
      - utils/


apps:
  erigon-daemon:
    command: wrappers/start-erigon.bash
    daemon: simple
    install-mode: disable
    refresh-mode: endure
    restart-condition: never
    plugs:
      - network
      - network-bind
    environment:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8

# Make sure we can find libsilkworm_capi.so by setting LD_LIBRARY_PATH
environment:
  LD_LIBRARY_PATH: "$SNAP/lib:$LD_LIBRARY_PATH"
